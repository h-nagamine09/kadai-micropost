[1mdiff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb[m
[1mindex b0093ea..6dd9682 100644[m
[1m--- a/app/controllers/application_controller.rb[m
[1m+++ b/app/controllers/application_controller.rb[m
[36m@@ -18,6 +18,7 @@[m [mclass ApplicationController < ActionController::Base[m
     @count_microposts = user.microposts.count[m
     @count_followings = user.followings.count #フォローしている人をカウント[m
     @count_followers = user.followers.count   #フォローされている人をカウント[m
[32m+[m[32m    @count_likes = user.likes.count #お気に入りっている投稿をカウント[m
    end [m
 end[m
 [m
[1mdiff --git a/app/controllers/toppages_controller.rb b/app/controllers/toppages_controller.rb[m
[1mindex 8fcf5bf..2a9eefa 100644[m
[1m--- a/app/controllers/toppages_controller.rb[m
[1m+++ b/app/controllers/toppages_controller.rb[m
[36m@@ -5,7 +5,7 @@[m [mclass ToppagesController < ApplicationController[m
       #form_for用 @micropostにカラのインスタンスを代入[m
       @micropost = current_user.microposts.build[m
       # 一覧用[m
[31m-      @microposts = current_user.microposts.order('created_at DESC').page(params[:page])[m
[32m+[m[32m      @microposts = current_user.feed_microposts.order('created_at DESC').page(params[:page])[m
     end[m
   end[m
 end[m
[1mdiff --git a/app/controllers/users_controller.rb b/app/controllers/users_controller.rb[m
[1mindex 33f5d1e..c197616 100644[m
[1m--- a/app/controllers/users_controller.rb[m
[1m+++ b/app/controllers/users_controller.rb[m
[36m@@ -1,6 +1,6 @@[m
 class UsersController < ApplicationController[m
   # 事前に実行される処理[m
[31m- before_action :require_user_logged_in,only: [:index, :show, :followings, :followers][m
[32m+[m[32m before_action :require_user_logged_in,only: [:index, :show, :followings, :followers, :likes][m
  [m
   def index[m
     #.allでDB一覧を取得全ユーザー一覧 ページネーションを適用させるために.page(params[:page])をつけてる[m
[36m@@ -32,18 +32,26 @@[m [mclass UsersController < ApplicationController[m
       render :new[m
     end[m
   end[m
[31m-  [m
[32m+[m[32m  # フォローイング一覧を取得[m
   def followings[m
     @user = User.find(params[:id])[m
     @followings = @user.followings.page(params[:page])[m
     counts(@user)[m
   end [m
[31m-  [m
[32m+[m[32m  # フォロワー一覧を取得[m
   def followers[m
     @user = User.find(params[:id])[m
     @followers = @user.followers.page(params[:page])[m
     counts(@user)[m
   end[m
[32m+[m[41m  [m
[32m+[m[32m  # お気に入り登録しているMicropost一覧を取得[m
[32m+[m[32m  def likes[m
[32m+[m[32m     @user = User.find(params[:id])[m
[32m+[m[32m     @likes = @user.likes.page(params[:page])[m
[32m+[m[32m    counts(@user)[m
[32m+[m[32m  end[m[41m [m
[32m+[m[41m  [m
   #Strong Paramter セキュリティのため[m
   #name,email,password,password_confirmationを許可。[m
   private[m
[1mdiff --git a/app/models/micropost.rb b/app/models/micropost.rb[m
[1mindex 0c17aa3..d7732a6 100644[m
[1m--- a/app/models/micropost.rb[m
[1m+++ b/app/models/micropost.rb[m
[36m@@ -1,8 +1,10 @@[m
 class Micropost < ApplicationRecord[m
[31m-  belongs_to :user[m
   # belong_to :userはユーザーとMicropostの一対多を表現している。このコードのおかげでmicropost.userとすると[m
   # micropostインスタンスを持っているUserを取得することができる[m
[32m+[m[32m   belongs_to :user[m
[32m+[m[32m   has_many :favorites[m
[32m+[m[32m   has_many :users, through: :favorites[m
   [m
   validates :content,presence: true, length: {maximum: 255} [m
[31m-  #バリデーション[m
[32m+[m
 end[m
[1mdiff --git a/app/models/user.rb b/app/models/user.rb[m
[1mindex 16389eb..5fc1203 100644[m
[1m--- a/app/models/user.rb[m
[1m+++ b/app/models/user.rb[m
[36m@@ -15,12 +15,15 @@[m [mclass User < ApplicationRecord[m
   # 多対多の図の右半分にいる自分がフォローしているUserへの参照[m
   has_many :relationships[m
   # 自分がフォローしているUser達を取得[m
[32m+[m[32m  has_many :favorites[m
[32m+[m[41m  [m
   has_many :followings, through: :relationships, source: :follow # < user.followersと書けば該当のuserがフォローしているUser達を取得できる[m
   # 多対多の図の左半分にいるUserからフォローされているという関係への参照(自分をフォローしているUserへの参照)[m
   has_many :reverses_of_relationship, class_name: 'Relationship',foreign_key: 'follow_id'[m
   # 自分をフォローしているUser達を取得[m
   has_many :followers, through: :reverses_of_relationship, source: :user[m
[31m-  [m
[32m+[m[32m  # お気に入りをつけたmicropostを取得[m
[32m+[m[32m  has_many :likes, through: :favorites, source: :micropost[m
   # 中間テーブルを経由して相手の情報を取得できるようにするためには'through'を使用する[m
   [m
   # フォローアンフォローメソッド[m
[36m@@ -50,7 +53,25 @@[m [mclass User < ApplicationRecord[m
     Micropost.where(user_id: self.following_ids + [self.id])[m
     # Micropost.where(user_id: フォローユーザ + 自分自身)[m
   end[m
[32m+[m[41m  [m
[32m+[m[32m  # --------課題 お気に入りボタン--------2/9[m
[32m+[m[41m  [m
[32m+[m[32m  def like(other_micropost)[m
[32m+[m[32m    unless self == other_micropost[m
[32m+[m[32m      self.favorites.find_or_create_by(micropost_id: other_micropost.id)[m
[32m+[m[32m    end[m
[32m+[m[32m  end[m
[32m+[m[41m  [m
[32m+[m[32m  def unlike(other_micropost)[m
[32m+[m[32m    favorite = self.favorites.find_by(micropost_id: other_micropost.id)[m
[32m+[m[32m    favorite.destroy if favorite[m
[32m+[m[32m  end[m[41m [m
[32m+[m[41m  [m
[32m+[m[32m  def like?(other_micropost)[m
[32m+[m[32m    self.likes.include?(other_micropost)[m
[32m+[m[32m  end[m
 end[m
[41m+ [m
 [m
 [m
 [m
[1mdiff --git a/app/views/layouts/_navbar.html.erb b/app/views/layouts/_navbar.html.erb[m
[1mindex 11f0771..bbc0761 100644[m
[1m--- a/app/views/layouts/_navbar.html.erb[m
[1m+++ b/app/views/layouts/_navbar.html.erb[m
[36m@@ -19,6 +19,7 @@[m
           <% if logged_in? %>[m
           <!--user一覧のリンクを実装-->[m
           <li><%= link_to 'Users',users_path %></li>[m
[32m+[m[41m         [m
           <li class="dropdown">[m
             <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><%= current_user.name %> <span class="caret"></span></a>[m
              <ul class="dropdown-menu">[m
[1mdiff --git a/app/views/microposts/_microposts.html.erb b/app/views/microposts/_microposts.html.erb[m
[1mindex e109753..056c589 100644[m
[1m--- a/app/views/microposts/_microposts.html.erb[m
[1m+++ b/app/views/microposts/_microposts.html.erb[m
[36m@@ -15,6 +15,10 @@[m
           <% if current_user == micropost.user %>[m
           <!--削除ボタン-->[m
             <%= link_to "Delete",micropost, method: :delete, data: {confirm: "You Sure?"},class: 'btn btn-danger btn-xs' %>[m
[32m+[m[41m          [m
[32m+[m[32m          <% else %>[m
[32m+[m[32m            <%=render 'favorites/like_button', micropost: micropost %>[m
[32m+[m[32m            <!--render 'パーシャルのパス, パーシャルで使う変数名: 渡す値'-->[m
           <% end %>[m
         </div>[m
       </div>[m
[36m@@ -22,5 +26,7 @@[m
      <% end %>[m
       <%= paginate microposts %>[m
 </ul>[m
[31m-[m
[32m+[m[41m   [m
[32m+[m[41m     [m
[32m+[m[41m      [m
 <!--micropostの共通のView パーシャル-->[m
\ No newline at end of file[m
[1mdiff --git a/app/views/relationships/_follow_button.html.erb b/app/views/relationships/_follow_button.html.erb[m
[1mindex cfa4fd4..17397c0 100644[m
[1m--- a/app/views/relationships/_follow_button.html.erb[m
[1m+++ b/app/views/relationships/_follow_button.html.erb[m
[36m@@ -13,4 +13,4 @@[m
       <%= f.submit 'Follow',class: 'btn btn-primary btn-block' %>[m
     <% end %>[m
   <% end %>[m
[31m-<% end %>[m
\ No newline at end of file[m
[32m+[m[32m<% end %>[m
[1mdiff --git a/app/views/users/followers.html.erb b/app/views/users/followers.html.erb[m
[1mindex d71190b..310d32b 100644[m
[1m--- a/app/views/users/followers.html.erb[m
[1m+++ b/app/views/users/followers.html.erb[m
[36m@@ -15,6 +15,7 @@[m
       <li class="<%= 'active' if current_page?(user_path(@user)) %>"><%= link_to user_path(@user) do %>Microposts <span class="badge"><%= @count_microposts %></span><% end %></li>[m
       <li class="<%= 'active' if current_page?(followings_user_path(@user)) %>"><%= link_to followings_user_path(@user) do %>Followings <span class="badge"><%= @count_followings %></span><% end %></li>[m
       <li class="<%= 'active' if current_page?(followers_user_path(@user)) %>"><%= link_to followers_user_path(@user) do %>Followers <span class="badge"><%= @count_followers %></span><% end %></li>[m
[32m+[m[32m      <li class="<%= 'active' if current_page?(likes_user_path(@user)) %>"><%= link_to likes_user_path(@user) do %>Likes <span class="badge"><%= @count_likes %></span><% end %></li>[m
     </ul>[m
     <%= render 'users', users: @followers %>[m
   </div>[m
[1mdiff --git a/app/views/users/followings.html.erb b/app/views/users/followings.html.erb[m
[1mindex 6eb3c8b..8ce7127 100644[m
[1m--- a/app/views/users/followings.html.erb[m
[1m+++ b/app/views/users/followings.html.erb[m
[36m@@ -15,6 +15,7 @@[m
       <li class="<%= 'active' if current_page?(user_path(@user)) %>"><%= link_to user_path(@user) do %>Microposts <span class="badge"><%= @count_microposts %></span><% end %></li>[m
       <li class="<%= 'active' if current_page?(followings_user_path(@user)) %>"><%= link_to followings_user_path(@user) do %>Followings <span class="badge"><%= @count_followings %></span><% end %></li>[m
       <li class="<%= 'active' if current_page?(followers_user_path(@user)) %>"><%= link_to followers_user_path(@user) do %>Followers <span class="badge"><%= @count_followers %></span><% end %></li>[m
[32m+[m[32m       <li class="<%= 'active' if current_page?(likes_user_path(@user)) %>"><%= link_to likes_user_path(@user) do %>Likes <span class="badge"><%= @count_likes %></span><% end %></li>[m
     </ul>[m
     <%= render 'users', users: @followings %>[m
   </div>[m
[1mdiff --git a/app/views/users/show.html.erb b/app/views/users/show.html.erb[m
[1mindex 3cf0c2a..3904661 100644[m
[1m--- a/app/views/users/show.html.erb[m
[1m+++ b/app/views/users/show.html.erb[m
[36m@@ -10,6 +10,8 @@[m
     </div>[m
     <!--フォローボタンを追加-->[m
     <%= render 'relationships/follow_button', user: @user %>[m
[32m+[m[41m   [m
[32m+[m[41m    [m
   </aside>[m
   <div class="col-xs-8">[m
     <ul class="nav-tabs nav-justified">[m
[36m@@ -18,6 +20,7 @@[m
       <li class="<%= 'active' if current_page?(user_path(@user))%>"><%=link_to user_path(@user) do %>Microposts <span class="badge"><%=@count_microposts %></span><% end %></li>[m
       <li class="<%= 'active' if current_page?(followings_user_path(@user)) %>"><%= link_to followings_user_path(@user) do %>Followings<span class="badge"><%=@count_followings %></span><% end %></li>[m
       <li class="<%= 'active' if current_page?(followers_user_path(@user)) %>"><%= link_to followers_user_path(@user) do %>Followers <span class="badge"><%= @count_followers %></span><% end %></li>[m
[32m+[m[32m      <li class="<%= 'active' if current_page?(likes_user_path(@user)) %>"><%= link_to likes_user_path(@user) do %>Likes <span class="badge"><%= @count_likes %></span><% end %></li>[m
     </ul>[m
     <%= render 'microposts/microposts', microposts: @microposts %>[m
   </div>[m
[1mdiff --git a/config/routes.rb b/config/routes.rb[m
[1mindex 6969b95..d9abfa0 100644[m
[1m--- a/config/routes.rb[m
[1m+++ b/config/routes.rb[m
[36m@@ -11,6 +11,7 @@[m [mRails.application.routes.draw do[m
     member do [m
       get :followings[m
       get :followers[m
[32m+[m[32m      get :likes[m
     end[m
   end[m
     [m
[36m@@ -20,4 +21,6 @@[m [mRails.application.routes.draw do[m
   [m
   # ログインユーザーがフォロー、アンフォローできるようにするルーティング[m
   resources :relationships, only: [:create , :destroy][m
[32m+[m[32m  # ログインユーザがお気に入りを登録できる[m
[32m+[m[32m  resources :favorites, only: [:create, :destroy][m
 end[m
[1mdiff --git a/db/schema.rb b/db/schema.rb[m
[1mindex 000d646..19788f9 100644[m
[1m--- a/db/schema.rb[m
[1m+++ b/db/schema.rb[m
[36m@@ -10,7 +10,27 @@[m
 #[m
 # It's strongly recommended that you check this file into your version control system.[m
 [m
[31m-ActiveRecord::Schema.define(version: 20190206115539) do[m
[32m+[m[32mActiveRecord::Schema.define(version: 20190209115004) do[m
[32m+[m
[32m+[m[32m  create_table "favorites", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8" do |t|[m
[32m+[m[32m    t.integer  "user_id"[m
[32m+[m[32m    t.integer  "micropost_id"[m
[32m+[m[32m    t.datetime "created_at",   null: false[m
[32m+[m[32m    t.datetime "updated_at",   null: false[m
[32m+[m[32m    t.index ["micropost_id"], name: "index_favorites_on_micropost_id", using: :btree[m
[32m+[m[32m    t.index ["user_id", "micropost_id"], name: "index_favorites_on_user_id_and_micropost_id", unique: true, using: :btree[m
[32m+[m[32m    t.index ["user_id"], name: "index_favorites_on_user_id", using: :btree[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  create_table "likes", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8" do |t|[m
[32m+[m[32m    t.integer  "user_id"[m
[32m+[m[32m    t.integer  "like_id"[m
[32m+[m[32m    t.datetime "created_at", null: false[m
[32m+[m[32m    t.datetime "updated_at", null: false[m
[32m+[m[32m    t.index ["like_id"], name: "index_likes_on_like_id", using: :btree[m
[32m+[m[32m    t.index ["user_id", "like_id"], name: "index_likes_on_user_id_and_like_id", unique: true, using: :btree[m
[32m+[m[32m    t.index ["user_id"], name: "index_likes_on_user_id", using: :btree[m
[32m+[m[32m  end[m
 [m
   create_table "microposts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8" do |t|[m
     t.string   "content"[m
[36m@@ -38,6 +58,10 @@[m [mActiveRecord::Schema.define(version: 20190206115539) do[m
     t.datetime "updated_at",      null: false[m
   end[m
 [m
[32m+[m[32m  add_foreign_key "favorites", "microposts"[m
[32m+[m[32m  add_foreign_key "favorites", "users"[m
[32m+[m[32m  add_foreign_key "likes", "users"[m
[32m+[m[32m  add_foreign_key "likes", "users", column: "like_id"[m
   add_foreign_key "microposts", "users"[m
   add_foreign_key "relationships", "users"[m
   add_foreign_key "relationships", "users", column: "follow_id"[m
